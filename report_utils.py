from fpdf import FPDF

def generate_pdf(data_dict, plot_img_buffer=None):
    pdf = FPDF()
    pdf.add_page()

    # Title
    pdf.set_font('Arial', 'B', 16)
    pdf.cell(0, 10, "Loan vs SIP Report", ln=1, align='C')
    pdf.ln(10)

    # Dashboard summary (same as before)
    pdf.set_font('Arial', 'B', 14)
    pdf.cell(0, 10, "Dashboard Summary:", ln=1)
    pdf.ln(5)

    for key in ["EMI (10 Years)", "Interest (10 Years)", "EMI (20 Years)", "Interest (20 Years)"]:
        pdf.set_font('Arial', 'B', 20)
        pdf.cell(95, 15, f"{key}:", border=0)
        pdf.cell(95, 15, f"{data_dict[key]}", ln=1)

    pdf.ln(10)
    pdf.set_font('Arial', 'B', 16)
    pdf.cell(0, 10, "Investment Summary:", ln=1)
    pdf.ln(5)

    for key in ["Monthly SIP", "SIP Corpus (20 Years)"]:
        pdf.set_font('Arial', 'B', 20)
        pdf.cell(95, 15, f"{key}:", border=0)
        pdf.cell(95, 15, f"{data_dict[key]}", ln=1)

    pdf.ln(10)

    # Add the plot image if available
    if plot_img_buffer:
        # Save the buffer temporarily as image file (fpdf needs a file path or bytes)
        # FPDF can take bytes directly with image() if you pass the buffer and format
        pdf.image(plot_img_buffer, x=10, y=None, w=pdf.w - 20)  # scale width to page width with margins

    pdf.set_font('Arial', 'I', 10)
    pdf.cell(0, 10, "Generated by Home Loan vs SIP Analyzer", ln=1, align='C')

    return pdf.output(dest='S').encode('latin1')
